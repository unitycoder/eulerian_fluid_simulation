#pragma kernel inject_density
#pragma kernel inject_velocity
#pragma kernel add_density
#pragma kernel add_velocity
#pragma kernel add_temperature



#include "fluid_utilities.cginc"


RWTexture2D<float4> textureRW;

Texture2D<float4> force_tex;

SamplerState LinearClamp;
float2 old_mouse_pos;
float2 mouse_pos;
float dt;

NUMTHREADS
void inject_density (uint3 id : SV_DispatchThreadID)
{

    float2 pos = ID_TO_UV(id.xy);
    float density = 1 - distance(pos,float2(0.5, 0.5))/0.1;

    textureRW[id.xy] = float4(density,0,0,0);
}

NUMTHREADS
void inject_velocity (uint3 id : SV_DispatchThreadID)
{

    float2 pos = ID_TO_UV(id.xy);

    float vel_y = force_tex.SampleLevel(LinearClamp, pos,0).x;
    float2 old_vel = textureRW[id.xy].xy;
    old_vel+= float2(0,vel_y);
    textureRW[id.xy] = float4(old_vel, 0, 0);
    //textureRW[id.xy] = float4(0, vel_y, 0, 0);
}


NUMTHREADS
void add_density (uint3 id : SV_DispatchThreadID)
{

    float2 pos = ID_TO_UV(id.xy);
    float density = 1 - distance(pos,mouse_pos)/0.1;

    float current_density = textureRW[id.xy].x;
    textureRW[id.xy] = float4(current_density + saturate(density * dt * 3),0,0,0);
}

NUMTHREADS
void add_temperature (uint3 id : SV_DispatchThreadID)
{

    float2 pos = ID_TO_UV(id.xy) * 2 - 1;
    float temperature = saturate(1-pow(length(pos)*4,2));
    float current_temperature = textureRW[id.xy].x;
    textureRW[id.xy] = float4(current_temperature + temperature * dt * 0.2,0,0,0);
}


NUMTHREADS
void add_velocity (uint3 id : SV_DispatchThreadID)
{

    float2 pos = ID_TO_UV(id.xy);

    float2 current_velocity = textureRW[id.xy].xy;
    float vel_x = 0;
    float vel_y = force_tex.SampleLevel(LinearClamp, pos,0).x;
    float2 new_vel = float2(vel_x, vel_y);
    textureRW[id.xy] = float4(current_velocity + new_vel *  dt, 0, 0);
}
